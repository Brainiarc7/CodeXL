//==============================================================================
// Copyright (c) 2015-2016 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief THIS CODE WAS AUTOGENERATED BY PASSTHROUGHGENERATOR ON 05/18/16
//==============================================================================

#ifndef _HSACOREAPITRACECLASSES_H_
#define _HSACOREAPITRACECLASSES_H_

#include "../HSAAPIBase.h"

///////////////////////////////////////////////////
/// Class used to trace hsa_status_string
///////////////////////////////////////////////////
class HSA_APITrace_hsa_status_string : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_status_string();

    /// Destructor
    ~HSA_APITrace_hsa_status_string();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param status Parameter passed to hsa_status_string
    /// \param status_string Parameter passed to hsa_status_string
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_status_t status,
                const char** status_string,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_status_string(const HSA_APITrace_hsa_status_string& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_status_string& operator = (const HSA_APITrace_hsa_status_string& rhs);

    hsa_status_t m_status; ///< Parameter passed to hsa_status_string
    const char** m_status_string; ///< Parameter passed to hsa_status_string
    std::string m_status_stringVal; ///< Member to hold value passed to hsa_status_string in status_string parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_status_string
};

///////////////////////////////////////////////////
/// Class used to trace hsa_init
///////////////////////////////////////////////////
class HSA_APITrace_hsa_init : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_init();

    /// Destructor
    ~HSA_APITrace_hsa_init();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values

    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_init(const HSA_APITrace_hsa_init& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_init& operator = (const HSA_APITrace_hsa_init& rhs);

    hsa_status_t m_retVal; ///< Parameter passed to hsa_init
};

///////////////////////////////////////////////////
/// Class used to trace hsa_shut_down
///////////////////////////////////////////////////
class HSA_APITrace_hsa_shut_down : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_shut_down();

    /// Destructor
    ~HSA_APITrace_hsa_shut_down();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values

    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_shut_down(const HSA_APITrace_hsa_shut_down& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_shut_down& operator = (const HSA_APITrace_hsa_shut_down& rhs);

    hsa_status_t m_retVal; ///< Parameter passed to hsa_shut_down
};

///////////////////////////////////////////////////
/// Class used to trace hsa_system_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_system_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_system_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_system_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param attribute Parameter passed to hsa_system_get_info
    /// \param value Parameter passed to hsa_system_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_system_info_t attribute,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_system_get_info(const HSA_APITrace_hsa_system_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_system_get_info& operator = (const HSA_APITrace_hsa_system_get_info& rhs);

    hsa_system_info_t m_attribute; ///< Parameter passed to hsa_system_get_info
    void* m_value; ///< Parameter passed to hsa_system_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_system_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_system_extension_supported
///////////////////////////////////////////////////
class HSA_APITrace_hsa_system_extension_supported : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_system_extension_supported();

    /// Destructor
    ~HSA_APITrace_hsa_system_extension_supported();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param extension Parameter passed to hsa_system_extension_supported
    /// \param version_major Parameter passed to hsa_system_extension_supported
    /// \param version_minor Parameter passed to hsa_system_extension_supported
    /// \param result Parameter passed to hsa_system_extension_supported
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                uint16_t extension,
                uint16_t version_major,
                uint16_t version_minor,
                bool* result,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_system_extension_supported(const HSA_APITrace_hsa_system_extension_supported& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_system_extension_supported& operator = (const HSA_APITrace_hsa_system_extension_supported& rhs);

    uint16_t m_extension; ///< Parameter passed to hsa_system_extension_supported
    uint16_t m_version_major; ///< Parameter passed to hsa_system_extension_supported
    uint16_t m_version_minor; ///< Parameter passed to hsa_system_extension_supported
    bool* m_result; ///< Parameter passed to hsa_system_extension_supported
    bool m_resultVal; ///< Member to hold value passed to hsa_system_extension_supported in result parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_system_extension_supported
};

///////////////////////////////////////////////////
/// Class used to trace hsa_system_get_extension_table
///////////////////////////////////////////////////
class HSA_APITrace_hsa_system_get_extension_table : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_system_get_extension_table();

    /// Destructor
    ~HSA_APITrace_hsa_system_get_extension_table();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param extension Parameter passed to hsa_system_get_extension_table
    /// \param version_major Parameter passed to hsa_system_get_extension_table
    /// \param version_minor Parameter passed to hsa_system_get_extension_table
    /// \param table Parameter passed to hsa_system_get_extension_table
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                uint16_t extension,
                uint16_t version_major,
                uint16_t version_minor,
                void* table,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_system_get_extension_table(const HSA_APITrace_hsa_system_get_extension_table& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_system_get_extension_table& operator = (const HSA_APITrace_hsa_system_get_extension_table& rhs);

    uint16_t m_extension; ///< Parameter passed to hsa_system_get_extension_table
    uint16_t m_version_major; ///< Parameter passed to hsa_system_get_extension_table
    uint16_t m_version_minor; ///< Parameter passed to hsa_system_get_extension_table
    void* m_table; ///< Parameter passed to hsa_system_get_extension_table
    hsa_status_t m_retVal; ///< Parameter passed to hsa_system_get_extension_table
};

///////////////////////////////////////////////////
/// Class used to trace hsa_agent_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_agent_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_agent_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_agent_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param agent Parameter passed to hsa_agent_get_info
    /// \param attribute Parameter passed to hsa_agent_get_info
    /// \param value Parameter passed to hsa_agent_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_agent_t agent,
                hsa_agent_info_t attribute,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_agent_get_info(const HSA_APITrace_hsa_agent_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_agent_get_info& operator = (const HSA_APITrace_hsa_agent_get_info& rhs);

    hsa_agent_t m_agent; ///< Parameter passed to hsa_agent_get_info
    hsa_agent_info_t m_attribute; ///< Parameter passed to hsa_agent_get_info
    void* m_value; ///< Parameter passed to hsa_agent_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_agent_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_iterate_agents
///////////////////////////////////////////////////
class HSA_APITrace_hsa_iterate_agents : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_iterate_agents();

    /// Destructor
    ~HSA_APITrace_hsa_iterate_agents();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param callback Parameter passed to hsa_iterate_agents
    /// \param data Parameter passed to hsa_iterate_agents
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_status_t (*callback)(hsa_agent_t agent, void* data),
                void* data,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_iterate_agents(const HSA_APITrace_hsa_iterate_agents& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_iterate_agents& operator = (const HSA_APITrace_hsa_iterate_agents& rhs);

    hsa_status_t (*m_callback)(hsa_agent_t agent, void* data); ///< Parameter passed to hsa_iterate_agents
    void* m_data; ///< Parameter passed to hsa_iterate_agents
    hsa_status_t m_retVal; ///< Parameter passed to hsa_iterate_agents
};

///////////////////////////////////////////////////
/// Class used to trace hsa_agent_get_exception_policies
///////////////////////////////////////////////////
class HSA_APITrace_hsa_agent_get_exception_policies : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_agent_get_exception_policies();

    /// Destructor
    ~HSA_APITrace_hsa_agent_get_exception_policies();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param agent Parameter passed to hsa_agent_get_exception_policies
    /// \param profile Parameter passed to hsa_agent_get_exception_policies
    /// \param mask Parameter passed to hsa_agent_get_exception_policies
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_agent_t agent,
                hsa_profile_t profile,
                uint16_t* mask,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_agent_get_exception_policies(const HSA_APITrace_hsa_agent_get_exception_policies& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_agent_get_exception_policies& operator = (const HSA_APITrace_hsa_agent_get_exception_policies& rhs);

    hsa_agent_t m_agent; ///< Parameter passed to hsa_agent_get_exception_policies
    hsa_profile_t m_profile; ///< Parameter passed to hsa_agent_get_exception_policies
    uint16_t* m_mask; ///< Parameter passed to hsa_agent_get_exception_policies
    uint16_t m_maskVal; ///< Member to hold value passed to hsa_agent_get_exception_policies in mask parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_agent_get_exception_policies
};

///////////////////////////////////////////////////
/// Class used to trace hsa_agent_extension_supported
///////////////////////////////////////////////////
class HSA_APITrace_hsa_agent_extension_supported : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_agent_extension_supported();

    /// Destructor
    ~HSA_APITrace_hsa_agent_extension_supported();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param extension Parameter passed to hsa_agent_extension_supported
    /// \param agent Parameter passed to hsa_agent_extension_supported
    /// \param version_major Parameter passed to hsa_agent_extension_supported
    /// \param version_minor Parameter passed to hsa_agent_extension_supported
    /// \param result Parameter passed to hsa_agent_extension_supported
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                uint16_t extension,
                hsa_agent_t agent,
                uint16_t version_major,
                uint16_t version_minor,
                bool* result,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_agent_extension_supported(const HSA_APITrace_hsa_agent_extension_supported& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_agent_extension_supported& operator = (const HSA_APITrace_hsa_agent_extension_supported& rhs);

    uint16_t m_extension; ///< Parameter passed to hsa_agent_extension_supported
    hsa_agent_t m_agent; ///< Parameter passed to hsa_agent_extension_supported
    uint16_t m_version_major; ///< Parameter passed to hsa_agent_extension_supported
    uint16_t m_version_minor; ///< Parameter passed to hsa_agent_extension_supported
    bool* m_result; ///< Parameter passed to hsa_agent_extension_supported
    bool m_resultVal; ///< Member to hold value passed to hsa_agent_extension_supported in result parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_agent_extension_supported
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_create
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_create : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_create();

    /// Destructor
    ~HSA_APITrace_hsa_signal_create();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param initial_value Parameter passed to hsa_signal_create
    /// \param num_consumers Parameter passed to hsa_signal_create
    /// \param consumers Parameter passed to hsa_signal_create
    /// \param signal Parameter passed to hsa_signal_create
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_value_t initial_value,
                uint32_t num_consumers,
                const hsa_agent_t* consumers,
                hsa_signal_t* signal,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_create(const HSA_APITrace_hsa_signal_create& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_create& operator = (const HSA_APITrace_hsa_signal_create& rhs);

    hsa_signal_value_t m_initial_value; ///< Parameter passed to hsa_signal_create
    uint32_t m_num_consumers; ///< Parameter passed to hsa_signal_create
    const hsa_agent_t* m_consumers; ///< Parameter passed to hsa_signal_create
    hsa_agent_t m_consumersVal; ///< Member to hold value passed to hsa_signal_create in consumers parameter
    hsa_signal_t* m_signal; ///< Parameter passed to hsa_signal_create
    hsa_signal_t m_signalVal; ///< Member to hold value passed to hsa_signal_create in signal parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_signal_create
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_destroy
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_destroy : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_destroy();

    /// Destructor
    ~HSA_APITrace_hsa_signal_destroy();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_destroy
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_destroy(const HSA_APITrace_hsa_signal_destroy& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_destroy& operator = (const HSA_APITrace_hsa_signal_destroy& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_destroy
    hsa_status_t m_retVal; ///< Parameter passed to hsa_signal_destroy
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_load_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_load_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_load_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_load_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_load_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_load_acquire(const HSA_APITrace_hsa_signal_load_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_load_acquire& operator = (const HSA_APITrace_hsa_signal_load_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_load_acquire
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_load_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_load_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_load_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_load_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_load_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_load_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_load_relaxed(const HSA_APITrace_hsa_signal_load_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_load_relaxed& operator = (const HSA_APITrace_hsa_signal_load_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_load_relaxed
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_load_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_store_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_store_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_store_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_store_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_store_relaxed
    /// \param value Parameter passed to hsa_signal_store_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_store_relaxed(const HSA_APITrace_hsa_signal_store_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_store_relaxed& operator = (const HSA_APITrace_hsa_signal_store_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_store_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_store_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_store_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_store_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_store_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_store_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_store_release
    /// \param value Parameter passed to hsa_signal_store_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_store_release(const HSA_APITrace_hsa_signal_store_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_store_release& operator = (const HSA_APITrace_hsa_signal_store_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_store_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_store_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_exchange_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_exchange_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_exchange_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_signal_exchange_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_exchange_acq_rel
    /// \param value Parameter passed to hsa_signal_exchange_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_exchange_acq_rel(const HSA_APITrace_hsa_signal_exchange_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_exchange_acq_rel& operator = (const HSA_APITrace_hsa_signal_exchange_acq_rel& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_exchange_acq_rel
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_exchange_acq_rel
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_exchange_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_exchange_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_exchange_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_exchange_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_exchange_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_exchange_acquire
    /// \param value Parameter passed to hsa_signal_exchange_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_exchange_acquire(const HSA_APITrace_hsa_signal_exchange_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_exchange_acquire& operator = (const HSA_APITrace_hsa_signal_exchange_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_exchange_acquire
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_exchange_acquire
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_exchange_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_exchange_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_exchange_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_exchange_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_exchange_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_exchange_relaxed
    /// \param value Parameter passed to hsa_signal_exchange_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_exchange_relaxed(const HSA_APITrace_hsa_signal_exchange_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_exchange_relaxed& operator = (const HSA_APITrace_hsa_signal_exchange_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_exchange_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_exchange_relaxed
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_exchange_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_exchange_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_exchange_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_exchange_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_exchange_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_exchange_release
    /// \param value Parameter passed to hsa_signal_exchange_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_exchange_release(const HSA_APITrace_hsa_signal_exchange_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_exchange_release& operator = (const HSA_APITrace_hsa_signal_exchange_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_exchange_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_exchange_release
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_exchange_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_cas_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_cas_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_cas_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_signal_cas_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_cas_acq_rel
    /// \param expected Parameter passed to hsa_signal_cas_acq_rel
    /// \param value Parameter passed to hsa_signal_cas_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t expected,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_cas_acq_rel(const HSA_APITrace_hsa_signal_cas_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_cas_acq_rel& operator = (const HSA_APITrace_hsa_signal_cas_acq_rel& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_cas_acq_rel
    hsa_signal_value_t m_expected; ///< Parameter passed to hsa_signal_cas_acq_rel
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_cas_acq_rel
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_cas_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_cas_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_cas_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_cas_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_cas_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_cas_acquire
    /// \param expected Parameter passed to hsa_signal_cas_acquire
    /// \param value Parameter passed to hsa_signal_cas_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t expected,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_cas_acquire(const HSA_APITrace_hsa_signal_cas_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_cas_acquire& operator = (const HSA_APITrace_hsa_signal_cas_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_cas_acquire
    hsa_signal_value_t m_expected; ///< Parameter passed to hsa_signal_cas_acquire
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_cas_acquire
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_cas_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_cas_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_cas_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_cas_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_cas_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_cas_relaxed
    /// \param expected Parameter passed to hsa_signal_cas_relaxed
    /// \param value Parameter passed to hsa_signal_cas_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t expected,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_cas_relaxed(const HSA_APITrace_hsa_signal_cas_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_cas_relaxed& operator = (const HSA_APITrace_hsa_signal_cas_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_cas_relaxed
    hsa_signal_value_t m_expected; ///< Parameter passed to hsa_signal_cas_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_cas_relaxed
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_cas_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_cas_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_cas_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_cas_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_cas_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_cas_release
    /// \param expected Parameter passed to hsa_signal_cas_release
    /// \param value Parameter passed to hsa_signal_cas_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t expected,
                hsa_signal_value_t value,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_cas_release(const HSA_APITrace_hsa_signal_cas_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_cas_release& operator = (const HSA_APITrace_hsa_signal_cas_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_cas_release
    hsa_signal_value_t m_expected; ///< Parameter passed to hsa_signal_cas_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_cas_release
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_cas_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_add_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_add_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_add_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_signal_add_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_add_acq_rel
    /// \param value Parameter passed to hsa_signal_add_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_add_acq_rel(const HSA_APITrace_hsa_signal_add_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_add_acq_rel& operator = (const HSA_APITrace_hsa_signal_add_acq_rel& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_add_acq_rel
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_add_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_add_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_add_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_add_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_add_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_add_acquire
    /// \param value Parameter passed to hsa_signal_add_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_add_acquire(const HSA_APITrace_hsa_signal_add_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_add_acquire& operator = (const HSA_APITrace_hsa_signal_add_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_add_acquire
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_add_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_add_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_add_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_add_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_add_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_add_relaxed
    /// \param value Parameter passed to hsa_signal_add_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_add_relaxed(const HSA_APITrace_hsa_signal_add_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_add_relaxed& operator = (const HSA_APITrace_hsa_signal_add_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_add_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_add_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_add_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_add_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_add_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_add_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_add_release
    /// \param value Parameter passed to hsa_signal_add_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_add_release(const HSA_APITrace_hsa_signal_add_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_add_release& operator = (const HSA_APITrace_hsa_signal_add_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_add_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_add_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_subtract_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_subtract_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_subtract_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_signal_subtract_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_subtract_acq_rel
    /// \param value Parameter passed to hsa_signal_subtract_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_subtract_acq_rel(const HSA_APITrace_hsa_signal_subtract_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_subtract_acq_rel& operator = (const HSA_APITrace_hsa_signal_subtract_acq_rel& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_subtract_acq_rel
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_subtract_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_subtract_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_subtract_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_subtract_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_subtract_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_subtract_acquire
    /// \param value Parameter passed to hsa_signal_subtract_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_subtract_acquire(const HSA_APITrace_hsa_signal_subtract_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_subtract_acquire& operator = (const HSA_APITrace_hsa_signal_subtract_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_subtract_acquire
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_subtract_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_subtract_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_subtract_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_subtract_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_subtract_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_subtract_relaxed
    /// \param value Parameter passed to hsa_signal_subtract_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_subtract_relaxed(const HSA_APITrace_hsa_signal_subtract_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_subtract_relaxed& operator = (const HSA_APITrace_hsa_signal_subtract_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_subtract_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_subtract_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_subtract_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_subtract_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_subtract_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_subtract_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_subtract_release
    /// \param value Parameter passed to hsa_signal_subtract_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_subtract_release(const HSA_APITrace_hsa_signal_subtract_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_subtract_release& operator = (const HSA_APITrace_hsa_signal_subtract_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_subtract_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_subtract_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_and_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_and_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_and_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_signal_and_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_and_acq_rel
    /// \param value Parameter passed to hsa_signal_and_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_and_acq_rel(const HSA_APITrace_hsa_signal_and_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_and_acq_rel& operator = (const HSA_APITrace_hsa_signal_and_acq_rel& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_and_acq_rel
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_and_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_and_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_and_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_and_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_and_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_and_acquire
    /// \param value Parameter passed to hsa_signal_and_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_and_acquire(const HSA_APITrace_hsa_signal_and_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_and_acquire& operator = (const HSA_APITrace_hsa_signal_and_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_and_acquire
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_and_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_and_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_and_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_and_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_and_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_and_relaxed
    /// \param value Parameter passed to hsa_signal_and_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_and_relaxed(const HSA_APITrace_hsa_signal_and_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_and_relaxed& operator = (const HSA_APITrace_hsa_signal_and_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_and_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_and_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_and_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_and_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_and_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_and_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_and_release
    /// \param value Parameter passed to hsa_signal_and_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_and_release(const HSA_APITrace_hsa_signal_and_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_and_release& operator = (const HSA_APITrace_hsa_signal_and_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_and_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_and_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_or_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_or_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_or_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_signal_or_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_or_acq_rel
    /// \param value Parameter passed to hsa_signal_or_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_or_acq_rel(const HSA_APITrace_hsa_signal_or_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_or_acq_rel& operator = (const HSA_APITrace_hsa_signal_or_acq_rel& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_or_acq_rel
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_or_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_or_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_or_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_or_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_or_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_or_acquire
    /// \param value Parameter passed to hsa_signal_or_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_or_acquire(const HSA_APITrace_hsa_signal_or_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_or_acquire& operator = (const HSA_APITrace_hsa_signal_or_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_or_acquire
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_or_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_or_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_or_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_or_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_or_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_or_relaxed
    /// \param value Parameter passed to hsa_signal_or_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_or_relaxed(const HSA_APITrace_hsa_signal_or_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_or_relaxed& operator = (const HSA_APITrace_hsa_signal_or_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_or_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_or_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_or_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_or_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_or_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_or_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_or_release
    /// \param value Parameter passed to hsa_signal_or_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_or_release(const HSA_APITrace_hsa_signal_or_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_or_release& operator = (const HSA_APITrace_hsa_signal_or_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_or_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_or_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_xor_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_xor_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_xor_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_signal_xor_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_xor_acq_rel
    /// \param value Parameter passed to hsa_signal_xor_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_xor_acq_rel(const HSA_APITrace_hsa_signal_xor_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_xor_acq_rel& operator = (const HSA_APITrace_hsa_signal_xor_acq_rel& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_xor_acq_rel
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_xor_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_xor_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_xor_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_xor_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_xor_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_xor_acquire
    /// \param value Parameter passed to hsa_signal_xor_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_xor_acquire(const HSA_APITrace_hsa_signal_xor_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_xor_acquire& operator = (const HSA_APITrace_hsa_signal_xor_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_xor_acquire
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_xor_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_xor_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_xor_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_xor_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_xor_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_xor_relaxed
    /// \param value Parameter passed to hsa_signal_xor_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_xor_relaxed(const HSA_APITrace_hsa_signal_xor_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_xor_relaxed& operator = (const HSA_APITrace_hsa_signal_xor_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_xor_relaxed
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_xor_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_xor_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_xor_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_xor_release();

    /// Destructor
    ~HSA_APITrace_hsa_signal_xor_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_xor_release
    /// \param value Parameter passed to hsa_signal_xor_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_value_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_xor_release(const HSA_APITrace_hsa_signal_xor_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_xor_release& operator = (const HSA_APITrace_hsa_signal_xor_release& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_xor_release
    hsa_signal_value_t m_value; ///< Parameter passed to hsa_signal_xor_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_wait_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_wait_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_wait_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_signal_wait_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_wait_acquire
    /// \param condition Parameter passed to hsa_signal_wait_acquire
    /// \param compare_value Parameter passed to hsa_signal_wait_acquire
    /// \param timeout_hint Parameter passed to hsa_signal_wait_acquire
    /// \param wait_state_hint Parameter passed to hsa_signal_wait_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_condition_t condition,
                hsa_signal_value_t compare_value,
                uint64_t timeout_hint,
                hsa_wait_state_t wait_state_hint,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_wait_acquire(const HSA_APITrace_hsa_signal_wait_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_wait_acquire& operator = (const HSA_APITrace_hsa_signal_wait_acquire& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_wait_acquire
    hsa_signal_condition_t m_condition; ///< Parameter passed to hsa_signal_wait_acquire
    hsa_signal_value_t m_compare_value; ///< Parameter passed to hsa_signal_wait_acquire
    uint64_t m_timeout_hint; ///< Parameter passed to hsa_signal_wait_acquire
    hsa_wait_state_t m_wait_state_hint; ///< Parameter passed to hsa_signal_wait_acquire
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_wait_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_signal_wait_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_signal_wait_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_signal_wait_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_signal_wait_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param signal Parameter passed to hsa_signal_wait_relaxed
    /// \param condition Parameter passed to hsa_signal_wait_relaxed
    /// \param compare_value Parameter passed to hsa_signal_wait_relaxed
    /// \param timeout_hint Parameter passed to hsa_signal_wait_relaxed
    /// \param wait_state_hint Parameter passed to hsa_signal_wait_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_signal_t signal,
                hsa_signal_condition_t condition,
                hsa_signal_value_t compare_value,
                uint64_t timeout_hint,
                hsa_wait_state_t wait_state_hint,
                hsa_signal_value_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_signal_wait_relaxed(const HSA_APITrace_hsa_signal_wait_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_signal_wait_relaxed& operator = (const HSA_APITrace_hsa_signal_wait_relaxed& rhs);

    hsa_signal_t m_signal; ///< Parameter passed to hsa_signal_wait_relaxed
    hsa_signal_condition_t m_condition; ///< Parameter passed to hsa_signal_wait_relaxed
    hsa_signal_value_t m_compare_value; ///< Parameter passed to hsa_signal_wait_relaxed
    uint64_t m_timeout_hint; ///< Parameter passed to hsa_signal_wait_relaxed
    hsa_wait_state_t m_wait_state_hint; ///< Parameter passed to hsa_signal_wait_relaxed
    hsa_signal_value_t m_retVal; ///< Parameter passed to hsa_signal_wait_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_create
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_create : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_create();

    /// Destructor
    ~HSA_APITrace_hsa_queue_create();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param agent Parameter passed to hsa_queue_create
    /// \param size Parameter passed to hsa_queue_create
    /// \param type_ Parameter passed to hsa_queue_create
    /// \param callback Parameter passed to hsa_queue_create
    /// \param data Parameter passed to hsa_queue_create
    /// \param private_segment_size Parameter passed to hsa_queue_create
    /// \param group_segment_size Parameter passed to hsa_queue_create
    /// \param queue Parameter passed to hsa_queue_create
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_agent_t agent,
                uint32_t size,
                hsa_queue_type_t type_,
                void (*callback)(hsa_status_t status, hsa_queue_t* source, void* data),
                void* data,
                uint32_t private_segment_size,
                uint32_t group_segment_size,
                hsa_queue_t** queue,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_create(const HSA_APITrace_hsa_queue_create& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_create& operator = (const HSA_APITrace_hsa_queue_create& rhs);

    hsa_agent_t m_agent; ///< Parameter passed to hsa_queue_create
    uint32_t m_size; ///< Parameter passed to hsa_queue_create
    hsa_queue_type_t m_type_; ///< Parameter passed to hsa_queue_create
    void (*m_callback)(hsa_status_t status, hsa_queue_t* source, void* data); ///< Parameter passed to hsa_queue_create
    void* m_data; ///< Parameter passed to hsa_queue_create
    uint32_t m_private_segment_size; ///< Parameter passed to hsa_queue_create
    uint32_t m_group_segment_size; ///< Parameter passed to hsa_queue_create
    hsa_queue_t** m_queue; ///< Parameter passed to hsa_queue_create
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_create in queue parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_queue_create
};

///////////////////////////////////////////////////
/// Class used to trace hsa_soft_queue_create
///////////////////////////////////////////////////
class HSA_APITrace_hsa_soft_queue_create : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_soft_queue_create();

    /// Destructor
    ~HSA_APITrace_hsa_soft_queue_create();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param region Parameter passed to hsa_soft_queue_create
    /// \param size Parameter passed to hsa_soft_queue_create
    /// \param type_ Parameter passed to hsa_soft_queue_create
    /// \param features Parameter passed to hsa_soft_queue_create
    /// \param doorbell_signal Parameter passed to hsa_soft_queue_create
    /// \param queue Parameter passed to hsa_soft_queue_create
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_region_t region,
                uint32_t size,
                hsa_queue_type_t type_,
                uint32_t features,
                hsa_signal_t doorbell_signal,
                hsa_queue_t** queue,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_soft_queue_create(const HSA_APITrace_hsa_soft_queue_create& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_soft_queue_create& operator = (const HSA_APITrace_hsa_soft_queue_create& rhs);

    hsa_region_t m_region; ///< Parameter passed to hsa_soft_queue_create
    uint32_t m_size; ///< Parameter passed to hsa_soft_queue_create
    hsa_queue_type_t m_type_; ///< Parameter passed to hsa_soft_queue_create
    uint32_t m_features; ///< Parameter passed to hsa_soft_queue_create
    hsa_signal_t m_doorbell_signal; ///< Parameter passed to hsa_soft_queue_create
    hsa_queue_t** m_queue; ///< Parameter passed to hsa_soft_queue_create
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_soft_queue_create in queue parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_soft_queue_create
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_destroy
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_destroy : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_destroy();

    /// Destructor
    ~HSA_APITrace_hsa_queue_destroy();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_destroy
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_queue_t* queue,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_destroy(const HSA_APITrace_hsa_queue_destroy& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_destroy& operator = (const HSA_APITrace_hsa_queue_destroy& rhs);

    hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_destroy
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_destroy in queue parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_queue_destroy
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_inactivate
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_inactivate : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_inactivate();

    /// Destructor
    ~HSA_APITrace_hsa_queue_inactivate();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_inactivate
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_queue_t* queue,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_inactivate(const HSA_APITrace_hsa_queue_inactivate& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_inactivate& operator = (const HSA_APITrace_hsa_queue_inactivate& rhs);

    hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_inactivate
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_inactivate in queue parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_queue_inactivate
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_load_read_index_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_load_read_index_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_load_read_index_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_queue_load_read_index_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_load_read_index_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_load_read_index_acquire(const HSA_APITrace_hsa_queue_load_read_index_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_load_read_index_acquire& operator = (const HSA_APITrace_hsa_queue_load_read_index_acquire& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_load_read_index_acquire
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_load_read_index_acquire in queue parameter
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_load_read_index_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_load_read_index_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_load_read_index_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_load_read_index_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_queue_load_read_index_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_load_read_index_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_load_read_index_relaxed(const HSA_APITrace_hsa_queue_load_read_index_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_load_read_index_relaxed& operator = (const HSA_APITrace_hsa_queue_load_read_index_relaxed& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_load_read_index_relaxed
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_load_read_index_relaxed in queue parameter
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_load_read_index_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_load_write_index_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_load_write_index_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_load_write_index_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_queue_load_write_index_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_load_write_index_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_load_write_index_acquire(const HSA_APITrace_hsa_queue_load_write_index_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_load_write_index_acquire& operator = (const HSA_APITrace_hsa_queue_load_write_index_acquire& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_load_write_index_acquire
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_load_write_index_acquire in queue parameter
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_load_write_index_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_load_write_index_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_load_write_index_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_load_write_index_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_queue_load_write_index_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_load_write_index_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_load_write_index_relaxed(const HSA_APITrace_hsa_queue_load_write_index_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_load_write_index_relaxed& operator = (const HSA_APITrace_hsa_queue_load_write_index_relaxed& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_load_write_index_relaxed
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_load_write_index_relaxed in queue parameter
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_load_write_index_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_store_write_index_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_store_write_index_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_store_write_index_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_queue_store_write_index_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_store_write_index_relaxed
    /// \param value Parameter passed to hsa_queue_store_write_index_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_store_write_index_relaxed(const HSA_APITrace_hsa_queue_store_write_index_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_store_write_index_relaxed& operator = (const HSA_APITrace_hsa_queue_store_write_index_relaxed& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_store_write_index_relaxed
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_store_write_index_relaxed in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_store_write_index_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_store_write_index_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_store_write_index_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_store_write_index_release();

    /// Destructor
    ~HSA_APITrace_hsa_queue_store_write_index_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_store_write_index_release
    /// \param value Parameter passed to hsa_queue_store_write_index_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_store_write_index_release(const HSA_APITrace_hsa_queue_store_write_index_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_store_write_index_release& operator = (const HSA_APITrace_hsa_queue_store_write_index_release& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_store_write_index_release
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_store_write_index_release in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_store_write_index_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_cas_write_index_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_cas_write_index_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_cas_write_index_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_queue_cas_write_index_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_cas_write_index_acq_rel
    /// \param expected Parameter passed to hsa_queue_cas_write_index_acq_rel
    /// \param value Parameter passed to hsa_queue_cas_write_index_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t expected,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_cas_write_index_acq_rel(const HSA_APITrace_hsa_queue_cas_write_index_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_cas_write_index_acq_rel& operator = (const HSA_APITrace_hsa_queue_cas_write_index_acq_rel& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_cas_write_index_acq_rel
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_cas_write_index_acq_rel in queue parameter
    uint64_t m_expected; ///< Parameter passed to hsa_queue_cas_write_index_acq_rel
    uint64_t m_value; ///< Parameter passed to hsa_queue_cas_write_index_acq_rel
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_cas_write_index_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_cas_write_index_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_cas_write_index_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_cas_write_index_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_queue_cas_write_index_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_cas_write_index_acquire
    /// \param expected Parameter passed to hsa_queue_cas_write_index_acquire
    /// \param value Parameter passed to hsa_queue_cas_write_index_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t expected,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_cas_write_index_acquire(const HSA_APITrace_hsa_queue_cas_write_index_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_cas_write_index_acquire& operator = (const HSA_APITrace_hsa_queue_cas_write_index_acquire& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_cas_write_index_acquire
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_cas_write_index_acquire in queue parameter
    uint64_t m_expected; ///< Parameter passed to hsa_queue_cas_write_index_acquire
    uint64_t m_value; ///< Parameter passed to hsa_queue_cas_write_index_acquire
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_cas_write_index_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_cas_write_index_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_cas_write_index_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_cas_write_index_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_queue_cas_write_index_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_cas_write_index_relaxed
    /// \param expected Parameter passed to hsa_queue_cas_write_index_relaxed
    /// \param value Parameter passed to hsa_queue_cas_write_index_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t expected,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_cas_write_index_relaxed(const HSA_APITrace_hsa_queue_cas_write_index_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_cas_write_index_relaxed& operator = (const HSA_APITrace_hsa_queue_cas_write_index_relaxed& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_cas_write_index_relaxed
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_cas_write_index_relaxed in queue parameter
    uint64_t m_expected; ///< Parameter passed to hsa_queue_cas_write_index_relaxed
    uint64_t m_value; ///< Parameter passed to hsa_queue_cas_write_index_relaxed
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_cas_write_index_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_cas_write_index_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_cas_write_index_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_cas_write_index_release();

    /// Destructor
    ~HSA_APITrace_hsa_queue_cas_write_index_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_cas_write_index_release
    /// \param expected Parameter passed to hsa_queue_cas_write_index_release
    /// \param value Parameter passed to hsa_queue_cas_write_index_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t expected,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_cas_write_index_release(const HSA_APITrace_hsa_queue_cas_write_index_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_cas_write_index_release& operator = (const HSA_APITrace_hsa_queue_cas_write_index_release& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_cas_write_index_release
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_cas_write_index_release in queue parameter
    uint64_t m_expected; ///< Parameter passed to hsa_queue_cas_write_index_release
    uint64_t m_value; ///< Parameter passed to hsa_queue_cas_write_index_release
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_cas_write_index_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_add_write_index_acq_rel
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_add_write_index_acq_rel : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_add_write_index_acq_rel();

    /// Destructor
    ~HSA_APITrace_hsa_queue_add_write_index_acq_rel();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_add_write_index_acq_rel
    /// \param value Parameter passed to hsa_queue_add_write_index_acq_rel
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_add_write_index_acq_rel(const HSA_APITrace_hsa_queue_add_write_index_acq_rel& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_add_write_index_acq_rel& operator = (const HSA_APITrace_hsa_queue_add_write_index_acq_rel& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_add_write_index_acq_rel
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_add_write_index_acq_rel in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_add_write_index_acq_rel
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_add_write_index_acq_rel
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_add_write_index_acquire
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_add_write_index_acquire : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_add_write_index_acquire();

    /// Destructor
    ~HSA_APITrace_hsa_queue_add_write_index_acquire();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_add_write_index_acquire
    /// \param value Parameter passed to hsa_queue_add_write_index_acquire
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_add_write_index_acquire(const HSA_APITrace_hsa_queue_add_write_index_acquire& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_add_write_index_acquire& operator = (const HSA_APITrace_hsa_queue_add_write_index_acquire& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_add_write_index_acquire
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_add_write_index_acquire in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_add_write_index_acquire
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_add_write_index_acquire
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_add_write_index_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_add_write_index_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_add_write_index_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_queue_add_write_index_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_add_write_index_relaxed
    /// \param value Parameter passed to hsa_queue_add_write_index_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_add_write_index_relaxed(const HSA_APITrace_hsa_queue_add_write_index_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_add_write_index_relaxed& operator = (const HSA_APITrace_hsa_queue_add_write_index_relaxed& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_add_write_index_relaxed
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_add_write_index_relaxed in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_add_write_index_relaxed
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_add_write_index_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_add_write_index_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_add_write_index_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_add_write_index_release();

    /// Destructor
    ~HSA_APITrace_hsa_queue_add_write_index_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_add_write_index_release
    /// \param value Parameter passed to hsa_queue_add_write_index_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value,
                uint64_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_add_write_index_release(const HSA_APITrace_hsa_queue_add_write_index_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_add_write_index_release& operator = (const HSA_APITrace_hsa_queue_add_write_index_release& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_add_write_index_release
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_add_write_index_release in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_add_write_index_release
    uint64_t m_retVal; ///< Parameter passed to hsa_queue_add_write_index_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_store_read_index_relaxed
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_store_read_index_relaxed : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_store_read_index_relaxed();

    /// Destructor
    ~HSA_APITrace_hsa_queue_store_read_index_relaxed();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_store_read_index_relaxed
    /// \param value Parameter passed to hsa_queue_store_read_index_relaxed
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_store_read_index_relaxed(const HSA_APITrace_hsa_queue_store_read_index_relaxed& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_store_read_index_relaxed& operator = (const HSA_APITrace_hsa_queue_store_read_index_relaxed& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_store_read_index_relaxed
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_store_read_index_relaxed in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_store_read_index_relaxed
};

///////////////////////////////////////////////////
/// Class used to trace hsa_queue_store_read_index_release
///////////////////////////////////////////////////
class HSA_APITrace_hsa_queue_store_read_index_release : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_queue_store_read_index_release();

    /// Destructor
    ~HSA_APITrace_hsa_queue_store_read_index_release();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param queue Parameter passed to hsa_queue_store_read_index_release
    /// \param value Parameter passed to hsa_queue_store_read_index_release
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const hsa_queue_t* queue,
                uint64_t value);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_queue_store_read_index_release(const HSA_APITrace_hsa_queue_store_read_index_release& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_queue_store_read_index_release& operator = (const HSA_APITrace_hsa_queue_store_read_index_release& rhs);

    const hsa_queue_t* m_queue; ///< Parameter passed to hsa_queue_store_read_index_release
    hsa_queue_t m_queueVal; ///< Member to hold value passed to hsa_queue_store_read_index_release in queue parameter
    uint64_t m_value; ///< Parameter passed to hsa_queue_store_read_index_release
};

///////////////////////////////////////////////////
/// Class used to trace hsa_region_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_region_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_region_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_region_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param region Parameter passed to hsa_region_get_info
    /// \param attribute Parameter passed to hsa_region_get_info
    /// \param value Parameter passed to hsa_region_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_region_t region,
                hsa_region_info_t attribute,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_region_get_info(const HSA_APITrace_hsa_region_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_region_get_info& operator = (const HSA_APITrace_hsa_region_get_info& rhs);

    hsa_region_t m_region; ///< Parameter passed to hsa_region_get_info
    hsa_region_info_t m_attribute; ///< Parameter passed to hsa_region_get_info
    void* m_value; ///< Parameter passed to hsa_region_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_region_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_agent_iterate_regions
///////////////////////////////////////////////////
class HSA_APITrace_hsa_agent_iterate_regions : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_agent_iterate_regions();

    /// Destructor
    ~HSA_APITrace_hsa_agent_iterate_regions();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param agent Parameter passed to hsa_agent_iterate_regions
    /// \param callback Parameter passed to hsa_agent_iterate_regions
    /// \param data Parameter passed to hsa_agent_iterate_regions
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_agent_t agent,
                hsa_status_t (*callback)(hsa_region_t region, void* data),
                void* data,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_agent_iterate_regions(const HSA_APITrace_hsa_agent_iterate_regions& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_agent_iterate_regions& operator = (const HSA_APITrace_hsa_agent_iterate_regions& rhs);

    hsa_agent_t m_agent; ///< Parameter passed to hsa_agent_iterate_regions
    hsa_status_t (*m_callback)(hsa_region_t region, void* data); ///< Parameter passed to hsa_agent_iterate_regions
    void* m_data; ///< Parameter passed to hsa_agent_iterate_regions
    hsa_status_t m_retVal; ///< Parameter passed to hsa_agent_iterate_regions
};

///////////////////////////////////////////////////
/// Class used to trace hsa_memory_allocate
///////////////////////////////////////////////////
class HSA_APITrace_hsa_memory_allocate : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_memory_allocate();

    /// Destructor
    ~HSA_APITrace_hsa_memory_allocate();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param region Parameter passed to hsa_memory_allocate
    /// \param size Parameter passed to hsa_memory_allocate
    /// \param ptr Parameter passed to hsa_memory_allocate
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_region_t region,
                size_t size,
                void** ptr,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_memory_allocate(const HSA_APITrace_hsa_memory_allocate& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_memory_allocate& operator = (const HSA_APITrace_hsa_memory_allocate& rhs);

    hsa_region_t m_region; ///< Parameter passed to hsa_memory_allocate
    size_t m_size; ///< Parameter passed to hsa_memory_allocate
    void** m_ptr; ///< Parameter passed to hsa_memory_allocate
    hsa_status_t m_retVal; ///< Parameter passed to hsa_memory_allocate
};

///////////////////////////////////////////////////
/// Class used to trace hsa_memory_free
///////////////////////////////////////////////////
class HSA_APITrace_hsa_memory_free : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_memory_free();

    /// Destructor
    ~HSA_APITrace_hsa_memory_free();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param ptr Parameter passed to hsa_memory_free
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                void* ptr,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_memory_free(const HSA_APITrace_hsa_memory_free& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_memory_free& operator = (const HSA_APITrace_hsa_memory_free& rhs);

    void* m_ptr; ///< Parameter passed to hsa_memory_free
    hsa_status_t m_retVal; ///< Parameter passed to hsa_memory_free
};

///////////////////////////////////////////////////
/// Class used to trace hsa_memory_copy
///////////////////////////////////////////////////
class HSA_APITrace_hsa_memory_copy : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_memory_copy();

    /// Destructor
    ~HSA_APITrace_hsa_memory_copy();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param dst Parameter passed to hsa_memory_copy
    /// \param src Parameter passed to hsa_memory_copy
    /// \param size Parameter passed to hsa_memory_copy
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                void* dst,
                const void* src,
                size_t size,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_memory_copy(const HSA_APITrace_hsa_memory_copy& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_memory_copy& operator = (const HSA_APITrace_hsa_memory_copy& rhs);

    void* m_dst; ///< Parameter passed to hsa_memory_copy
    const void* m_src; ///< Parameter passed to hsa_memory_copy
    size_t m_size; ///< Parameter passed to hsa_memory_copy
    hsa_status_t m_retVal; ///< Parameter passed to hsa_memory_copy
};

///////////////////////////////////////////////////
/// Class used to trace hsa_memory_assign_agent
///////////////////////////////////////////////////
class HSA_APITrace_hsa_memory_assign_agent : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_memory_assign_agent();

    /// Destructor
    ~HSA_APITrace_hsa_memory_assign_agent();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param ptr Parameter passed to hsa_memory_assign_agent
    /// \param agent Parameter passed to hsa_memory_assign_agent
    /// \param access Parameter passed to hsa_memory_assign_agent
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                void* ptr,
                hsa_agent_t agent,
                hsa_access_permission_t access,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_memory_assign_agent(const HSA_APITrace_hsa_memory_assign_agent& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_memory_assign_agent& operator = (const HSA_APITrace_hsa_memory_assign_agent& rhs);

    void* m_ptr; ///< Parameter passed to hsa_memory_assign_agent
    hsa_agent_t m_agent; ///< Parameter passed to hsa_memory_assign_agent
    hsa_access_permission_t m_access; ///< Parameter passed to hsa_memory_assign_agent
    hsa_status_t m_retVal; ///< Parameter passed to hsa_memory_assign_agent
};

///////////////////////////////////////////////////
/// Class used to trace hsa_memory_register
///////////////////////////////////////////////////
class HSA_APITrace_hsa_memory_register : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_memory_register();

    /// Destructor
    ~HSA_APITrace_hsa_memory_register();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param ptr Parameter passed to hsa_memory_register
    /// \param size Parameter passed to hsa_memory_register
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                void* ptr,
                size_t size,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_memory_register(const HSA_APITrace_hsa_memory_register& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_memory_register& operator = (const HSA_APITrace_hsa_memory_register& rhs);

    void* m_ptr; ///< Parameter passed to hsa_memory_register
    size_t m_size; ///< Parameter passed to hsa_memory_register
    hsa_status_t m_retVal; ///< Parameter passed to hsa_memory_register
};

///////////////////////////////////////////////////
/// Class used to trace hsa_memory_deregister
///////////////////////////////////////////////////
class HSA_APITrace_hsa_memory_deregister : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_memory_deregister();

    /// Destructor
    ~HSA_APITrace_hsa_memory_deregister();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param ptr Parameter passed to hsa_memory_deregister
    /// \param size Parameter passed to hsa_memory_deregister
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                void* ptr,
                size_t size,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_memory_deregister(const HSA_APITrace_hsa_memory_deregister& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_memory_deregister& operator = (const HSA_APITrace_hsa_memory_deregister& rhs);

    void* m_ptr; ///< Parameter passed to hsa_memory_deregister
    size_t m_size; ///< Parameter passed to hsa_memory_deregister
    hsa_status_t m_retVal; ///< Parameter passed to hsa_memory_deregister
};

///////////////////////////////////////////////////
/// Class used to trace hsa_isa_from_name
///////////////////////////////////////////////////
class HSA_APITrace_hsa_isa_from_name : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_isa_from_name();

    /// Destructor
    ~HSA_APITrace_hsa_isa_from_name();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param name Parameter passed to hsa_isa_from_name
    /// \param isa Parameter passed to hsa_isa_from_name
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                const char* name,
                hsa_isa_t* isa,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_isa_from_name(const HSA_APITrace_hsa_isa_from_name& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_isa_from_name& operator = (const HSA_APITrace_hsa_isa_from_name& rhs);

    const char* m_name; ///< Parameter passed to hsa_isa_from_name
    std::string m_nameVal; ///< Member to hold value passed to hsa_isa_from_name in name parameter
    hsa_isa_t* m_isa; ///< Parameter passed to hsa_isa_from_name
    hsa_isa_t m_isaVal; ///< Member to hold value passed to hsa_isa_from_name in isa parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_isa_from_name
};

///////////////////////////////////////////////////
/// Class used to trace hsa_isa_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_isa_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_isa_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_isa_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param isa Parameter passed to hsa_isa_get_info
    /// \param attribute Parameter passed to hsa_isa_get_info
    /// \param index Parameter passed to hsa_isa_get_info
    /// \param value Parameter passed to hsa_isa_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_isa_t isa,
                hsa_isa_info_t attribute,
                uint32_t index,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_isa_get_info(const HSA_APITrace_hsa_isa_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_isa_get_info& operator = (const HSA_APITrace_hsa_isa_get_info& rhs);

    hsa_isa_t m_isa; ///< Parameter passed to hsa_isa_get_info
    hsa_isa_info_t m_attribute; ///< Parameter passed to hsa_isa_get_info
    uint32_t m_index; ///< Parameter passed to hsa_isa_get_info
    void* m_value; ///< Parameter passed to hsa_isa_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_isa_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_isa_compatible
///////////////////////////////////////////////////
class HSA_APITrace_hsa_isa_compatible : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_isa_compatible();

    /// Destructor
    ~HSA_APITrace_hsa_isa_compatible();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param code_object_isa Parameter passed to hsa_isa_compatible
    /// \param agent_isa Parameter passed to hsa_isa_compatible
    /// \param result Parameter passed to hsa_isa_compatible
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_isa_t code_object_isa,
                hsa_isa_t agent_isa,
                bool* result,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_isa_compatible(const HSA_APITrace_hsa_isa_compatible& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_isa_compatible& operator = (const HSA_APITrace_hsa_isa_compatible& rhs);

    hsa_isa_t m_code_object_isa; ///< Parameter passed to hsa_isa_compatible
    hsa_isa_t m_agent_isa; ///< Parameter passed to hsa_isa_compatible
    bool* m_result; ///< Parameter passed to hsa_isa_compatible
    bool m_resultVal; ///< Member to hold value passed to hsa_isa_compatible in result parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_isa_compatible
};

///////////////////////////////////////////////////
/// Class used to trace hsa_code_object_serialize
///////////////////////////////////////////////////
class HSA_APITrace_hsa_code_object_serialize : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_code_object_serialize();

    /// Destructor
    ~HSA_APITrace_hsa_code_object_serialize();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param code_object Parameter passed to hsa_code_object_serialize
    /// \param alloc_callback Parameter passed to hsa_code_object_serialize
    /// \param callback_data Parameter passed to hsa_code_object_serialize
    /// \param options Parameter passed to hsa_code_object_serialize
    /// \param serialized_code_object Parameter passed to hsa_code_object_serialize
    /// \param serialized_code_object_size Parameter passed to hsa_code_object_serialize
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_code_object_t code_object,
                hsa_status_t (*alloc_callback)(size_t size, hsa_callback_data_t data, void** address),
                hsa_callback_data_t callback_data,
                const char* options,
                void** serialized_code_object,
                size_t* serialized_code_object_size,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_code_object_serialize(const HSA_APITrace_hsa_code_object_serialize& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_code_object_serialize& operator = (const HSA_APITrace_hsa_code_object_serialize& rhs);

    hsa_code_object_t m_code_object; ///< Parameter passed to hsa_code_object_serialize
    hsa_status_t (*m_alloc_callback)(size_t size, hsa_callback_data_t data, void** address); ///< Parameter passed to hsa_code_object_serialize
    hsa_callback_data_t m_callback_data; ///< Parameter passed to hsa_code_object_serialize
    const char* m_options; ///< Parameter passed to hsa_code_object_serialize
    std::string m_optionsVal; ///< Member to hold value passed to hsa_code_object_serialize in options parameter
    void** m_serialized_code_object; ///< Parameter passed to hsa_code_object_serialize
    size_t* m_serialized_code_object_size; ///< Parameter passed to hsa_code_object_serialize
    size_t m_serialized_code_object_sizeVal; ///< Member to hold value passed to hsa_code_object_serialize in serialized_code_object_size parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_code_object_serialize
};

///////////////////////////////////////////////////
/// Class used to trace hsa_code_object_deserialize
///////////////////////////////////////////////////
class HSA_APITrace_hsa_code_object_deserialize : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_code_object_deserialize();

    /// Destructor
    ~HSA_APITrace_hsa_code_object_deserialize();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param serialized_code_object Parameter passed to hsa_code_object_deserialize
    /// \param serialized_code_object_size Parameter passed to hsa_code_object_deserialize
    /// \param options Parameter passed to hsa_code_object_deserialize
    /// \param code_object Parameter passed to hsa_code_object_deserialize
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                void* serialized_code_object,
                size_t serialized_code_object_size,
                const char* options,
                hsa_code_object_t* code_object,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_code_object_deserialize(const HSA_APITrace_hsa_code_object_deserialize& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_code_object_deserialize& operator = (const HSA_APITrace_hsa_code_object_deserialize& rhs);

    void* m_serialized_code_object; ///< Parameter passed to hsa_code_object_deserialize
    size_t m_serialized_code_object_size; ///< Parameter passed to hsa_code_object_deserialize
    const char* m_options; ///< Parameter passed to hsa_code_object_deserialize
    std::string m_optionsVal; ///< Member to hold value passed to hsa_code_object_deserialize in options parameter
    hsa_code_object_t* m_code_object; ///< Parameter passed to hsa_code_object_deserialize
    hsa_code_object_t m_code_objectVal; ///< Member to hold value passed to hsa_code_object_deserialize in code_object parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_code_object_deserialize
};

///////////////////////////////////////////////////
/// Class used to trace hsa_code_object_destroy
///////////////////////////////////////////////////
class HSA_APITrace_hsa_code_object_destroy : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_code_object_destroy();

    /// Destructor
    ~HSA_APITrace_hsa_code_object_destroy();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param code_object Parameter passed to hsa_code_object_destroy
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_code_object_t code_object,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_code_object_destroy(const HSA_APITrace_hsa_code_object_destroy& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_code_object_destroy& operator = (const HSA_APITrace_hsa_code_object_destroy& rhs);

    hsa_code_object_t m_code_object; ///< Parameter passed to hsa_code_object_destroy
    hsa_status_t m_retVal; ///< Parameter passed to hsa_code_object_destroy
};

///////////////////////////////////////////////////
/// Class used to trace hsa_code_object_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_code_object_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_code_object_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_code_object_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param code_object Parameter passed to hsa_code_object_get_info
    /// \param attribute Parameter passed to hsa_code_object_get_info
    /// \param value Parameter passed to hsa_code_object_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_code_object_t code_object,
                hsa_code_object_info_t attribute,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_code_object_get_info(const HSA_APITrace_hsa_code_object_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_code_object_get_info& operator = (const HSA_APITrace_hsa_code_object_get_info& rhs);

    hsa_code_object_t m_code_object; ///< Parameter passed to hsa_code_object_get_info
    hsa_code_object_info_t m_attribute; ///< Parameter passed to hsa_code_object_get_info
    void* m_value; ///< Parameter passed to hsa_code_object_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_code_object_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_code_object_get_symbol
///////////////////////////////////////////////////
class HSA_APITrace_hsa_code_object_get_symbol : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_code_object_get_symbol();

    /// Destructor
    ~HSA_APITrace_hsa_code_object_get_symbol();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param code_object Parameter passed to hsa_code_object_get_symbol
    /// \param symbol_name Parameter passed to hsa_code_object_get_symbol
    /// \param symbol Parameter passed to hsa_code_object_get_symbol
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_code_object_t code_object,
                const char* symbol_name,
                hsa_code_symbol_t* symbol,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_code_object_get_symbol(const HSA_APITrace_hsa_code_object_get_symbol& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_code_object_get_symbol& operator = (const HSA_APITrace_hsa_code_object_get_symbol& rhs);

    hsa_code_object_t m_code_object; ///< Parameter passed to hsa_code_object_get_symbol
    const char* m_symbol_name; ///< Parameter passed to hsa_code_object_get_symbol
    std::string m_symbol_nameVal; ///< Member to hold value passed to hsa_code_object_get_symbol in symbol_name parameter
    hsa_code_symbol_t* m_symbol; ///< Parameter passed to hsa_code_object_get_symbol
    hsa_code_symbol_t m_symbolVal; ///< Member to hold value passed to hsa_code_object_get_symbol in symbol parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_code_object_get_symbol
};

///////////////////////////////////////////////////
/// Class used to trace hsa_code_symbol_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_code_symbol_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_code_symbol_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_code_symbol_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param code_symbol Parameter passed to hsa_code_symbol_get_info
    /// \param attribute Parameter passed to hsa_code_symbol_get_info
    /// \param value Parameter passed to hsa_code_symbol_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_code_symbol_t code_symbol,
                hsa_code_symbol_info_t attribute,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_code_symbol_get_info(const HSA_APITrace_hsa_code_symbol_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_code_symbol_get_info& operator = (const HSA_APITrace_hsa_code_symbol_get_info& rhs);

    hsa_code_symbol_t m_code_symbol; ///< Parameter passed to hsa_code_symbol_get_info
    hsa_code_symbol_info_t m_attribute; ///< Parameter passed to hsa_code_symbol_get_info
    void* m_value; ///< Parameter passed to hsa_code_symbol_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_code_symbol_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_code_object_iterate_symbols
///////////////////////////////////////////////////
class HSA_APITrace_hsa_code_object_iterate_symbols : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_code_object_iterate_symbols();

    /// Destructor
    ~HSA_APITrace_hsa_code_object_iterate_symbols();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param code_object Parameter passed to hsa_code_object_iterate_symbols
    /// \param callback Parameter passed to hsa_code_object_iterate_symbols
    /// \param data Parameter passed to hsa_code_object_iterate_symbols
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_code_object_t code_object,
                hsa_status_t (*callback)(hsa_code_object_t code_object, hsa_code_symbol_t symbol, void* data),
                void* data,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_code_object_iterate_symbols(const HSA_APITrace_hsa_code_object_iterate_symbols& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_code_object_iterate_symbols& operator = (const HSA_APITrace_hsa_code_object_iterate_symbols& rhs);

    hsa_code_object_t m_code_object; ///< Parameter passed to hsa_code_object_iterate_symbols
    hsa_status_t (*m_callback)(hsa_code_object_t code_object, hsa_code_symbol_t symbol, void* data); ///< Parameter passed to hsa_code_object_iterate_symbols
    void* m_data; ///< Parameter passed to hsa_code_object_iterate_symbols
    hsa_status_t m_retVal; ///< Parameter passed to hsa_code_object_iterate_symbols
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_create
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_create : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_create();

    /// Destructor
    ~HSA_APITrace_hsa_executable_create();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param profile Parameter passed to hsa_executable_create
    /// \param executable_state Parameter passed to hsa_executable_create
    /// \param options Parameter passed to hsa_executable_create
    /// \param executable Parameter passed to hsa_executable_create
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_profile_t profile,
                hsa_executable_state_t executable_state,
                const char* options,
                hsa_executable_t* executable,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_create(const HSA_APITrace_hsa_executable_create& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_create& operator = (const HSA_APITrace_hsa_executable_create& rhs);

    hsa_profile_t m_profile; ///< Parameter passed to hsa_executable_create
    hsa_executable_state_t m_executable_state; ///< Parameter passed to hsa_executable_create
    const char* m_options; ///< Parameter passed to hsa_executable_create
    std::string m_optionsVal; ///< Member to hold value passed to hsa_executable_create in options parameter
    hsa_executable_t* m_executable; ///< Parameter passed to hsa_executable_create
    hsa_executable_t m_executableVal; ///< Member to hold value passed to hsa_executable_create in executable parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_create
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_destroy
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_destroy : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_destroy();

    /// Destructor
    ~HSA_APITrace_hsa_executable_destroy();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_destroy
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_destroy(const HSA_APITrace_hsa_executable_destroy& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_destroy& operator = (const HSA_APITrace_hsa_executable_destroy& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_destroy
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_destroy
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_load_code_object
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_load_code_object : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_load_code_object();

    /// Destructor
    ~HSA_APITrace_hsa_executable_load_code_object();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_load_code_object
    /// \param agent Parameter passed to hsa_executable_load_code_object
    /// \param code_object Parameter passed to hsa_executable_load_code_object
    /// \param options Parameter passed to hsa_executable_load_code_object
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                hsa_agent_t agent,
                hsa_code_object_t code_object,
                const char* options,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_load_code_object(const HSA_APITrace_hsa_executable_load_code_object& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_load_code_object& operator = (const HSA_APITrace_hsa_executable_load_code_object& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_load_code_object
    hsa_agent_t m_agent; ///< Parameter passed to hsa_executable_load_code_object
    hsa_code_object_t m_code_object; ///< Parameter passed to hsa_executable_load_code_object
    const char* m_options; ///< Parameter passed to hsa_executable_load_code_object
    std::string m_optionsVal; ///< Member to hold value passed to hsa_executable_load_code_object in options parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_load_code_object
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_freeze
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_freeze : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_freeze();

    /// Destructor
    ~HSA_APITrace_hsa_executable_freeze();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_freeze
    /// \param options Parameter passed to hsa_executable_freeze
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                const char* options,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_freeze(const HSA_APITrace_hsa_executable_freeze& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_freeze& operator = (const HSA_APITrace_hsa_executable_freeze& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_freeze
    const char* m_options; ///< Parameter passed to hsa_executable_freeze
    std::string m_optionsVal; ///< Member to hold value passed to hsa_executable_freeze in options parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_freeze
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_executable_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_get_info
    /// \param attribute Parameter passed to hsa_executable_get_info
    /// \param value Parameter passed to hsa_executable_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                hsa_executable_info_t attribute,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_get_info(const HSA_APITrace_hsa_executable_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_get_info& operator = (const HSA_APITrace_hsa_executable_get_info& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_get_info
    hsa_executable_info_t m_attribute; ///< Parameter passed to hsa_executable_get_info
    void* m_value; ///< Parameter passed to hsa_executable_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_global_variable_define
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_global_variable_define : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_global_variable_define();

    /// Destructor
    ~HSA_APITrace_hsa_executable_global_variable_define();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_global_variable_define
    /// \param variable_name Parameter passed to hsa_executable_global_variable_define
    /// \param address Parameter passed to hsa_executable_global_variable_define
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                const char* variable_name,
                void* address,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_global_variable_define(const HSA_APITrace_hsa_executable_global_variable_define& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_global_variable_define& operator = (const HSA_APITrace_hsa_executable_global_variable_define& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_global_variable_define
    const char* m_variable_name; ///< Parameter passed to hsa_executable_global_variable_define
    std::string m_variable_nameVal; ///< Member to hold value passed to hsa_executable_global_variable_define in variable_name parameter
    void* m_address; ///< Parameter passed to hsa_executable_global_variable_define
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_global_variable_define
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_agent_global_variable_define
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_agent_global_variable_define : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_agent_global_variable_define();

    /// Destructor
    ~HSA_APITrace_hsa_executable_agent_global_variable_define();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_agent_global_variable_define
    /// \param agent Parameter passed to hsa_executable_agent_global_variable_define
    /// \param variable_name Parameter passed to hsa_executable_agent_global_variable_define
    /// \param address Parameter passed to hsa_executable_agent_global_variable_define
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                hsa_agent_t agent,
                const char* variable_name,
                void* address,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_agent_global_variable_define(const HSA_APITrace_hsa_executable_agent_global_variable_define& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_agent_global_variable_define& operator = (const HSA_APITrace_hsa_executable_agent_global_variable_define& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_agent_global_variable_define
    hsa_agent_t m_agent; ///< Parameter passed to hsa_executable_agent_global_variable_define
    const char* m_variable_name; ///< Parameter passed to hsa_executable_agent_global_variable_define
    std::string m_variable_nameVal; ///< Member to hold value passed to hsa_executable_agent_global_variable_define in variable_name parameter
    void* m_address; ///< Parameter passed to hsa_executable_agent_global_variable_define
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_agent_global_variable_define
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_readonly_variable_define
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_readonly_variable_define : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_readonly_variable_define();

    /// Destructor
    ~HSA_APITrace_hsa_executable_readonly_variable_define();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_readonly_variable_define
    /// \param agent Parameter passed to hsa_executable_readonly_variable_define
    /// \param variable_name Parameter passed to hsa_executable_readonly_variable_define
    /// \param address Parameter passed to hsa_executable_readonly_variable_define
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                hsa_agent_t agent,
                const char* variable_name,
                void* address,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_readonly_variable_define(const HSA_APITrace_hsa_executable_readonly_variable_define& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_readonly_variable_define& operator = (const HSA_APITrace_hsa_executable_readonly_variable_define& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_readonly_variable_define
    hsa_agent_t m_agent; ///< Parameter passed to hsa_executable_readonly_variable_define
    const char* m_variable_name; ///< Parameter passed to hsa_executable_readonly_variable_define
    std::string m_variable_nameVal; ///< Member to hold value passed to hsa_executable_readonly_variable_define in variable_name parameter
    void* m_address; ///< Parameter passed to hsa_executable_readonly_variable_define
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_readonly_variable_define
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_validate
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_validate : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_validate();

    /// Destructor
    ~HSA_APITrace_hsa_executable_validate();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_validate
    /// \param result Parameter passed to hsa_executable_validate
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                uint32_t* result,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_validate(const HSA_APITrace_hsa_executable_validate& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_validate& operator = (const HSA_APITrace_hsa_executable_validate& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_validate
    uint32_t* m_result; ///< Parameter passed to hsa_executable_validate
    uint32_t m_resultVal; ///< Member to hold value passed to hsa_executable_validate in result parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_validate
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_get_symbol
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_get_symbol : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_get_symbol();

    /// Destructor
    ~HSA_APITrace_hsa_executable_get_symbol();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_get_symbol
    /// \param module_name Parameter passed to hsa_executable_get_symbol
    /// \param symbol_name Parameter passed to hsa_executable_get_symbol
    /// \param agent Parameter passed to hsa_executable_get_symbol
    /// \param call_convention Parameter passed to hsa_executable_get_symbol
    /// \param symbol Parameter passed to hsa_executable_get_symbol
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                const char* module_name,
                const char* symbol_name,
                hsa_agent_t agent,
                int32_t call_convention,
                hsa_executable_symbol_t* symbol,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_get_symbol(const HSA_APITrace_hsa_executable_get_symbol& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_get_symbol& operator = (const HSA_APITrace_hsa_executable_get_symbol& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_get_symbol
    const char* m_module_name; ///< Parameter passed to hsa_executable_get_symbol
    std::string m_module_nameVal; ///< Member to hold value passed to hsa_executable_get_symbol in module_name parameter
    const char* m_symbol_name; ///< Parameter passed to hsa_executable_get_symbol
    std::string m_symbol_nameVal; ///< Member to hold value passed to hsa_executable_get_symbol in symbol_name parameter
    hsa_agent_t m_agent; ///< Parameter passed to hsa_executable_get_symbol
    int32_t m_call_convention; ///< Parameter passed to hsa_executable_get_symbol
    hsa_executable_symbol_t* m_symbol; ///< Parameter passed to hsa_executable_get_symbol
    hsa_executable_symbol_t m_symbolVal; ///< Member to hold value passed to hsa_executable_get_symbol in symbol parameter
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_get_symbol
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_symbol_get_info
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_symbol_get_info : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_symbol_get_info();

    /// Destructor
    ~HSA_APITrace_hsa_executable_symbol_get_info();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable_symbol Parameter passed to hsa_executable_symbol_get_info
    /// \param attribute Parameter passed to hsa_executable_symbol_get_info
    /// \param value Parameter passed to hsa_executable_symbol_get_info
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_symbol_t executable_symbol,
                hsa_executable_symbol_info_t attribute,
                void* value,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_symbol_get_info(const HSA_APITrace_hsa_executable_symbol_get_info& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_symbol_get_info& operator = (const HSA_APITrace_hsa_executable_symbol_get_info& rhs);

    hsa_executable_symbol_t m_executable_symbol; ///< Parameter passed to hsa_executable_symbol_get_info
    hsa_executable_symbol_info_t m_attribute; ///< Parameter passed to hsa_executable_symbol_get_info
    void* m_value; ///< Parameter passed to hsa_executable_symbol_get_info
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_symbol_get_info
};

///////////////////////////////////////////////////
/// Class used to trace hsa_executable_iterate_symbols
///////////////////////////////////////////////////
class HSA_APITrace_hsa_executable_iterate_symbols : public HSAAPIBase
{
public:
    /// Constructor
    HSA_APITrace_hsa_executable_iterate_symbols();

    /// Destructor
    ~HSA_APITrace_hsa_executable_iterate_symbols();

    /// get return value string
    /// \return string representation of the return value;
    std::string GetRetString();

    /// Returns the API's arguments formatted as strings
    /// \return string representation of the API's arguments
    std::string ToString();

    /// Assigns the API's various parameter values
    /// \param executable Parameter passed to hsa_executable_iterate_symbols
    /// \param callback Parameter passed to hsa_executable_iterate_symbols
    /// \param data Parameter passed to hsa_executable_iterate_symbols
    void Create(ULONGLONG ullStartTime,
                ULONGLONG ullEndTime,
                hsa_executable_t executable,
                hsa_status_t (*callback)(hsa_executable_t executable, hsa_executable_symbol_t symbol, void* data),
                void* data,
                hsa_status_t retVal);

private:
    /// Disabled copy constructor
    /// \rhs item being copied
    HSA_APITrace_hsa_executable_iterate_symbols(const HSA_APITrace_hsa_executable_iterate_symbols& rhs);

    /// Disabled assignment operator
    /// \rhs item being assigned
    HSA_APITrace_hsa_executable_iterate_symbols& operator = (const HSA_APITrace_hsa_executable_iterate_symbols& rhs);

    hsa_executable_t m_executable; ///< Parameter passed to hsa_executable_iterate_symbols
    hsa_status_t (*m_callback)(hsa_executable_t executable, hsa_executable_symbol_t symbol, void* data); ///< Parameter passed to hsa_executable_iterate_symbols
    void* m_data; ///< Parameter passed to hsa_executable_iterate_symbols
    hsa_status_t m_retVal; ///< Parameter passed to hsa_executable_iterate_symbols
};



#endif // _HSACOREAPITRACECLASSES_H_

